version: "3.7"

services:
  nginx:
    image: "nginx:1.22"
    container_name: "nginx"
    restart: "always"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "9080:9080"
      - "8443:8443"
    volumes:
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx_config/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx_config/nginx_params:/etc/nginx/nginx_params
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      m2m_network:
        ipv4_address: ${NGINX_STATIC_IP}

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  api:
    links:
      - mariadb:mariadb
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      m2m_network:
        ipv4_address: ${API_STATIC_IP}
    container_name: "api"
    volumes:
      - ./../../mnt/hdd1/m2m_public:/app/public
      - ./../../error_logs:/root/.npm/_logs/
    restart: always

  redis:
    image: redis:alpine
    restart: always
    command: redis-server --port ${REDIS_PORT}
    container_name: m2m_redis
    hostname: m2m_redis
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPUS}"
          memory: ${REDIS_MEMORY}
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      m2m_network:
        ipv4_address: ${REDIS_STATIC_IP}

  mariadb:
    image: mariadb:10.8
    restart: always
    environment:
      - ${MARIADB_ENV_KEY}=${MARIADB_ENV_VALUE}
    volumes:
      - ${MARIADB_VOLUMES_PATH}
    ports:
      - "${MARIADB_PORT}:${MARIADB_PORT}"
    networks:
      m2m_network:
        ipv4_address: ${MARIADB_STATIC_IP}

networks:
  m2m_network:
    external:
      name: m2m_service
