version: "3.7"

services:
  mariadb:
    image: mariadb:10.8
    restart: always
    environment:
      - ${MARIADB_ENV_KEY}=${MARIADB_ENV_VALUE}
    volumes:
      - ${MARIADB_VOLUMES_PATH}
    ports:
      - "${MARIADB_PORT}:${MARIADB_PORT}"

  redis:
    image: redis:alpine
    restart: always
    command: redis-server --port ${REDIS_PORT}
    container_name: m2m_redis
    hostname: m2m_redis
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPUS}"
          memory: ${REDIS_MEMORY}
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    restart: always
    command:
      - "--api"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--insecureskipverify=true"
      - "--defaultentrypoints=http,https,ws,wss"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.redirect.entrypoint=https"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.address.tls"
      - "--entryPoints.ws.address=:8081"
      - "--entrypoints.ws.redirect.entrypoint=wss"
      - "--entryPoints.wss.address=:8083"
      - "--entrypoints.wss.address.tls"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL_ADDRESS}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # - "--log.level=DEBUG"
      # - "--log.filePath=/path/to/log-file.log"
      # - "--log.format=json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "8081:8081"
      - "8083:8083"
    volumes:
      - "${TRAEFIK_LETSSENCRYPT_VOLUEMES}:/letsencrypt"
      - "${DOCKER_SOCK}:/var/run/docker.sock:ro"
    labels:
      - traefik.http.routers.traefik.rule=Host(`${API_SERVER_BASE_URL}`)
      - traefik.http.routers.traefik.service=api@internal

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "api"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_SERVER_BASE_URL}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https, wss"
      #https
      - "traefik.http.routers.api.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=redirect-to-https"
      # ws
      - "traefik.ws.routers.api.tls.certresolver=myresolver"
      - "traefik.ws.routers.api.rule=Host(`${API_SERVER_BASE_URL}`)"
      - "traefik.ws.routers.api.entrypoints=ws"
      - "traefik.ws.services.api.loadbalancer.server.port=8081"
      # # wss
      - "traefik.wss.protocol=ws"
      - "traefik.wss.routers.api.rule=Host(`${API_SERVER_BASE_URL}`)"
      - "traefik.wss.routers.api.entrypoints=wss"
      - "traefik.wss.routers.api.tls=true"
      - "traefik.wss.routers.api.tls.certresolver=myresolver"
      - "traefik.wss.services.api.loadbalancer.server.port=8083"
