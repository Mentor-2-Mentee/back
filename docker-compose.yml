version: "3.7"

services:
  mariadb:
    image: mariadb:10.8
    restart: always
    environment:
      - ${MARIADB_ENV_KEY}=${MARIADB_ENV_VALUE}
    volumes:
      - ${MARIADB_VOLUMES_PATH}
    ports:
      - "${MARIADB_PORT}:${MARIADB_PORT}"

  redis:
    image: redis:alpine
    restart: always
    command: redis-server --port ${REDIS_PORT}
    container_name: m2m_redis
    hostname: m2m_redis
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPUS}"
          memory: ${REDIS_MEMORY}
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    restart: always
    command:
      # - "--api"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--entrypoints.metrics.address=:9999"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      # - "--entrypoints.https.address.tls=true"
      - "--entryPoints.websocket.address=:8081"
      - "--entryPoints.websocketsecure.address=:8083"
      # - "--entrypoints.websocketsecure.address.tls=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL_ADDRESS}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # - "--log.level=DEBUG"
      # - "--log.filePath=/path/to/log-file.log"
      # - "--log.format=json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "8081:8081"
      - "8083:8083"
      - "9999:9999"
    volumes:
      - "${TRAEFIK_LETSSENCRYPT_VOLUEMES}:/letsencrypt"
      - "${DOCKER_SOCK}:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboardapi.entrypoints=http,https"
      - "traefik.http.routers.dashboard.rule=Host(`${API_SERVER_BASE_URL}`) &&  PathPrefix(`/dashboard/`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboardapi.rule=Host(`${API_SERVER_BASE_URL}`) &&  PathPrefix(`/api/`)"
      - "traefik.http.routers.dashboardapi.service=api@internal"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "api"
    restart: always
    labels:
      - "traefik.enable=true"
      #https
      - "traefik.http.routers.api.rule=Host(`${API_SERVER_BASE_URL}`)"
      - "traefik.http.routers.api.entrypoints=http,https"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.services.api.loadbalancer.server.port=80"
      # ws
      - "traefik.http.routers.websocket.tls.certresolver=myresolver"
      - "traefik.http.routers.websocket.rule=Host(`${API_SERVER_BASE_URL}`)"
      - "traefik.http.routers.websocket.entrypoints=websocket,websocketsecure"
      - "traefik.http.services.websocket.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.redirect-to-websocketsecure.redirectscheme.scheme=websocketsecure"
